/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package itpm.assi.member2;

import itpm.assi.*;
import itpm.assi.praveen.connection;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Vinuka Wathsara
 */
public class Des9 extends javax.swing.JFrame {

    Connection conn = null;
    PreparedStatement Insertps = null;

    /**
     * Creates new form Des9
     */
    public Des9() {
        initComponents();
        LectureName();

//        try {
//            Class.forName("com.mysql.jdbc.Driver");
//            con = DriverManager.getConnection(DB_URL, username, password);
//
//        } catch (SQLException ex) {
//            Logger.getLogger(Des9.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (ClassNotFoundException ex) {
//            Logger.getLogger(Des9.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }

    public ArrayList<Lecturer> lecturerList() {

        ArrayList<Lecturer> lecturerList = new ArrayList<>();

        try {
           conn = connection.getConnection();
//            conn = DriverManager.getConnection(DB_URL, username, password);
            String query1 = "SELECT * FROM add_lecturer ";
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(query1);
            Lecturer lecturer;

            while (rs.next()) {

                lecturer = new Lecturer(rs.getInt("EMP_ID"), rs.getString("LectureName"), rs.getString("Faculty"), rs.getString("Department"), rs.getString("Center"), rs.getString("Building"), rs.getString("Level"), rs.getString("Rank"));
                lecturerList.add(lecturer);

            }

        } catch (SQLException ex) {
            Logger.getLogger(Des9.class.getName()).log(Level.SEVERE, null, ex);
        } 

        return lecturerList;
    }

    public void LectureName() {

        ArrayList<Lecturer> list = lecturerList();
        DefaultTableModel model = (DefaultTableModel) jTable1Lecturer.getModel();
        model.setRowCount(0);
        Object[] row = new Object[9];
        for (int i = 0; i < list.size(); i++) {
            row[0] = i + 1;
            row[1] = list.get(i).getLectureName();
            row[2] = list.get(i).getEMP_ID();
            row[3] = list.get(i).getFaculty();
            row[4] = list.get(i).getLevel();
            row[5] = list.get(i).getDepartment();
            row[6] = list.get(i).getCenter();
            row[7] = list.get(i).getBuilding();
            row[8] = list.get(i).getRank();
            model.addRow(row);

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1Lecturer = new javax.swing.JTable();
        btnClear = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        inputLectureName = new javax.swing.JTextField();
        inputEMPID = new javax.swing.JTextField();
        inputRank = new javax.swing.JTextField();
        FacultyList = new javax.swing.JComboBox<>();
        DepartmentList = new javax.swing.JComboBox<>();
        Centerlist = new javax.swing.JComboBox<>();
        Buildinglist = new javax.swing.JComboBox<>();
        Levellist = new javax.swing.JComboBox<>();
        updatebtn = new javax.swing.JButton();
        deletebtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 18, 50));

        jLabel1.setFont(new java.awt.Font("Modern No. 20", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Manage lecturers");

        jButton1.setText("Home");

        jButton2.setText("Add Lecture");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 334, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(220, 220, 220)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addGap(47, 47, 47))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel1)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(jLabel10)))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jTable1Lecturer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Emp-ID", "Faculty", "Level", "Department", "Center", "Building", "Rank"
            }
        ));
        jTable1Lecturer.setFocusable(false);
        jTable1Lecturer.setRowHeight(25);
        jTable1Lecturer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1LecturerMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1Lecturer);

        btnClear.setBackground(new java.awt.Color(106, 116, 145));
        btnClear.setForeground(new java.awt.Color(255, 255, 255));
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        jLabel2.setText("Lecturer Name");

        jLabel3.setText("Employee ID");

        jLabel4.setText("Faculty");
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });

        jLabel5.setText("Department");

        jLabel6.setText("Center");

        jLabel7.setText("Building");

        jLabel8.setText("Level");

        jLabel9.setText("Rank");

        inputEMPID.setEditable(false);
        inputEMPID.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                inputEMPIDFocusLost(evt);
            }
        });
        inputEMPID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                inputEMPIDKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                inputEMPIDKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                inputEMPIDKeyTyped(evt);
            }
        });

        inputRank.setEditable(false);

        FacultyList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-", "Computing", "Business", "Engineering", "Human Resources" }));

        DepartmentList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-", "IT", "SE", "DS", "CS", "IM", "CSNE", "Civil", "Electronic Engineering", "Mechanical Engineering", "QS" }));

        Centerlist.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-", "Malabe", "Matara", "Metro", "Kandy", "Kurunegala", "Jaffna" }));

        Buildinglist.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-", "New Building", "D-Block", "Main Building" }));

        Levellist.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-", "Professor", "Assistant Professor", "Senior Lecturer(HG)", "Senior Lecturer", "Lecturer", "Assistant Lecturer" }));
        Levellist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LevellistActionPerformed(evt);
            }
        });

        updatebtn.setBackground(new java.awt.Color(106, 116, 145));
        updatebtn.setForeground(new java.awt.Color(255, 255, 255));
        updatebtn.setText("Update");
        updatebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatebtnActionPerformed(evt);
            }
        });

        deletebtn.setBackground(new java.awt.Color(106, 116, 145));
        deletebtn.setForeground(new java.awt.Color(255, 255, 255));
        deletebtn.setText("Delete");
        deletebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletebtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addGap(32, 32, 32))
            .addGroup(layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(updatebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(deletebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(124, 124, 124)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(inputLectureName)
                            .addComponent(inputEMPID)
                            .addComponent(FacultyList, 0, 174, Short.MAX_VALUE)
                            .addComponent(DepartmentList, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 178, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addGap(136, 136, 136)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(inputRank)
                            .addComponent(Centerlist, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Buildinglist, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Levellist, 0, 179, Short.MAX_VALUE))))
                .addGap(77, 77, 77))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(67, 67, 67)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel6)
                    .addComponent(inputLectureName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Centerlist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel7)
                    .addComponent(inputEMPID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Buildinglist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel8)
                    .addComponent(FacultyList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Levellist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel9)
                    .addComponent(inputRank, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DepartmentList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(deletebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(updatebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void deletebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletebtnActionPerformed
        try {
            int selectedRow = jTable1Lecturer.getSelectedRow();
            if (selectedRow >= 0) {
                String sql = "delete from add_lecturer where EMP_ID='" + inputEMPID.getText() + "'";
                int result = conn.prepareStatement(sql).executeUpdate();
                if (result == 1) {
                    //masg
                    JOptionPane.showMessageDialog(null, "Delete Successfully !!", "success", JOptionPane.INFORMATION_MESSAGE);
                } else {

                    //msg eorr
                    JOptionPane.showMessageDialog(null, "Inserted Not Successfully !!", "error", JOptionPane.ERROR_MESSAGE);
                }
                LectureName();
            }else{
                JOptionPane.showMessageDialog(null, "Select a row !!", "error", JOptionPane.ERROR_MESSAGE);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_deletebtnActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        inputEMPID.setText("");
        inputLectureName.setText("");
        FacultyList.getSelectedItem().toString();
        DepartmentList.getSelectedItem().toString();
        Centerlist.getSelectedItem().toString();
        Buildinglist.getSelectedItem().toString();
        Levellist.getSelectedItem().toString();
        inputRank.setText("");        // TODO add your handling code here:
    }//GEN-LAST:event_btnClearActionPerformed

    private void jTable1LecturerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1LecturerMouseClicked
        try {
            DefaultTableModel dtm = (DefaultTableModel) jTable1Lecturer.getModel();
            int selectedRow = jTable1Lecturer.getSelectedRow();
            inputLectureName.setText(dtm.getValueAt(selectedRow, 1).toString());
            inputEMPID.setText(dtm.getValueAt(selectedRow, 2).toString());
            FacultyList.setSelectedItem(dtm.getValueAt(selectedRow, 3).toString());
            DepartmentList.setSelectedItem(dtm.getValueAt(selectedRow, 5).toString());
            Centerlist.setSelectedItem(dtm.getValueAt(selectedRow, 6).toString());
            Buildinglist.setSelectedItem(dtm.getValueAt(selectedRow, 7).toString());
            Levellist.setSelectedItem(dtm.getValueAt(selectedRow, 4).toString());
            inputRank.setText(dtm.getValueAt(selectedRow, 8).toString());
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jTable1LecturerMouseClicked

    private void updatebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatebtnActionPerformed
        try {
            int selectedRow = jTable1Lecturer.getSelectedRow();
            int selectedId = Integer.parseInt(jTable1Lecturer.getValueAt(jTable1Lecturer.getSelectedRow(), 0).toString());
            if (selectedRow >= 0) {
                String sql = "update add_lecturer set LectureName='" + inputLectureName.getText() + "', Faculty='" + FacultyList.getSelectedItem().toString() + "', Department='" + DepartmentList.getSelectedItem().toString() + "', Center='" + Centerlist.getSelectedItem().toString() + "', Building='" + Buildinglist.getSelectedItem().toString() + "', Level='" + Levellist.getSelectedItem().toString() + "', Rank='" + inputRank.getText() + "'where EMP_ID='" + inputEMPID.getText() + "' ";
                int result = conn.prepareStatement(sql).executeUpdate();
                if (result == 1) {
                    //masg
                    JOptionPane.showMessageDialog(null, "Updated Successfully !!", "success", JOptionPane.INFORMATION_MESSAGE);
                } else {

                    //msg eorr
                    JOptionPane.showMessageDialog(null, "Inserted Not Successfully !!", "error", JOptionPane.ERROR_MESSAGE);
                }
                LectureName();
            }else{
                JOptionPane.showMessageDialog(null, "Select a row !!", "error", JOptionPane.ERROR_MESSAGE);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_updatebtnActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
new Des8().setVisible(true);
dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        
    }//GEN-LAST:event_jLabel4MouseClicked

    private void inputEMPIDFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_inputEMPIDFocusLost
//        inputRank.setText(String.valueOf(Levellist.getSelectedIndex())+"."+inputEMPID.getText());
    }//GEN-LAST:event_inputEMPIDFocusLost

    private void inputEMPIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputEMPIDKeyPressed
        // TODO add your handling code here:
//        inputRank.setText(String.valueOf(Levellist.getSelectedIndex())+"."+inputEMPID.getText());
    }//GEN-LAST:event_inputEMPIDKeyPressed

    private void inputEMPIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputEMPIDKeyTyped
        // TODO add your handling code here:
//        inputRank.setText(String.valueOf(Levellist.getSelectedIndex())+"."+inputEMPID.getText());
    }//GEN-LAST:event_inputEMPIDKeyTyped

    private void inputEMPIDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputEMPIDKeyReleased
        // TODO add your handling code here:
        inputRank.setText(String.valueOf(Levellist.getSelectedIndex())+"."+inputEMPID.getText());
    }//GEN-LAST:event_inputEMPIDKeyReleased

    private void LevellistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LevellistActionPerformed
        // TODO add your handling code here:
        inputRank.setText(String.valueOf(Levellist.getSelectedIndex())+"."+inputEMPID.getText());
        
    }//GEN-LAST:event_LevellistActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Des9.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Des9.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Des9.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Des9.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Des9().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Buildinglist;
    private javax.swing.JComboBox<String> Centerlist;
    private javax.swing.JComboBox<String> DepartmentList;
    private javax.swing.JComboBox<String> FacultyList;
    private javax.swing.JComboBox<String> Levellist;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton deletebtn;
    private javax.swing.JTextField inputEMPID;
    private javax.swing.JTextField inputLectureName;
    private javax.swing.JTextField inputRank;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1Lecturer;
    private javax.swing.JButton updatebtn;
    // End of variables declaration//GEN-END:variables
}
